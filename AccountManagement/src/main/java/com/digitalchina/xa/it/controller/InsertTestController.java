package com.digitalchina.xa.it.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.digitalchina.xa.it.service.InsertTestService;

@Controller
@RequestMapping(value = "/test")
public class InsertTestController {
	@Autowired
	private InsertTestService insertTestService;

	@ResponseBody
	@GetMapping("/insert")
	public void insertTest() {
		String timeStamp = String.valueOf(System.currentTimeMillis());
		String dataStr = "《圣经》中有一个通天塔的故事大致是说上帝为了阻止人类联合起来就让人类说不同的语言人类没法儿沟通达不成协议通天塔的计划就失败了但是千年以后有一种叫程序猿的物种敲着一种这个群体通用的语言连接着全世界所有的人打造这互联网世界的通天塔如今的世界正是因为互联网才连接在一起当 Hello World! 从显示器打印出来的时候还记得你激动的心情吗？如果你是程序员一定看得懂上面这一段文字这是每一个程序员向计算机世界说你好世界的方式但是你不一定知道这段文字也是一种协议是人类和计算机沟通的协议只有通过这种协议计算机才知道我们想让它做什么协议三要素当然这种协议还是更接近人类语言机器不能直接读懂需要进行翻译翻译的工作教给编译器也就是程序员常说的compile这个过程比较复杂其中的编译原理非常复杂我在这里不进行详述 但是可以看得出计算机语言作为程序员控制一台计算机工作的协议具备了协议的三要素语法就是这一段内容要符合一定的规则和格式例如括号要成对结束要使用分号等语义就是这一段内容要代表某种意义例如数字减去数字是有意义的数字减去文本一般来说就没有意义顺序就是先干啥后干啥例如可以先加上某个数值然后再减去某个数值会了计算机语言你就能够教给一台计算机完成你的工作了恭喜你入门了！但是要想打造互联网世界的通天塔只教给一台机器做什么是不够的你需要学会教给一大片机器做什么这就需要网络协议只有通过网络协议才能使一大片机器互相协作、共同完成一件事这个时候你可能会问网络协议长啥样这么神奇能干成啥事？我先拿一个简单的例子让你尝尝鲜然后再讲一个大事当你想要买一个商品常规的做法就是打开浏览器输入购物网站的地址浏览器就会给你显示一个缤纷多彩的页面那你有没有深入思考过浏览器是如何做到这件事情的？它之所以能够显示缤纷多彩的页面是因为它收到了一段来自 HTTP 协议的东西这符合协议的三要素吗？我带你来看一下首先符合语法也就是说只有按照上面那个格式来浏览器才认例如上来是状态然后是首部然后是内容第二符合语义就是要按照约定的意思来例如状态200表述的意思是网页成功返回如果不成功就是我们常见的404第三符合顺序你一点浏览器就是发送出一个 HTTP 请求然后才有上面那一串 HTTP 返回的东西浏览器显然按照协议商定好的做了最后一个五彩缤纷的页面就出现在你面前了我们常用的网络协议有哪些？接下来揭秘我要说的大事情双十一这和我们要讲的网络协议有什么关系呢？在经济学领域有个伦纳德·里德（Leonard E. Read）创作的《铅笔的故事》这个故事通过一个铅笔的诞生过程来讲述复杂的经济学理论这里我也用一个下单的过程看看互联网世界的运行过程中都使用了哪些网络协议你先在浏览器里面输入 输入 https://www.kaola.com 这是 这是一个URL浏览器只知道名字是字是www.kaola.com但是但是不知道具体的地点所以不知道应该如何访问于是它打开地址簿去查找可以使用一般的地址簿协议DNS去查找还可以使用另一种更加精准的地址簿查找协议HTTPDNS无论用哪一种方法查找最终都会得到这个地址：地址：106.114.138.24这个是这个是IP地址是互联网世界的门牌号知道了目标地址浏览器就开始打包它的请求对于普通的浏览请求往往会使用HTTP协议；但是对于购物的请求往往需要进行加密传输因而用HTTPS协议无论是什么协议里面都会写明你要买什么和买多少﻿DNS、HTTP、HTTPS 在的层我们称为应用层经过应用层封装后浏览器会将应用层的包交给下一层去完成通过 socket 编程来实现下一层是传输层传输层有两种协议一种是无连接的协议UDP一种是面向连接的协议TCP对于支付来讲往往使用 TCP 协议所谓的面向连接就是TCP 会保证这个包能够到达目的地如果不能到达就会重新发送直至到达TCP 协议里面会有两个端口一个是浏览器监听的端口一个是电商的服务器监听的端口操作系统往往通过端口来判断它得到的包应该给哪个进程传输层封装完毕后浏览器会将包交给操作系统的网络层网络层的协议是 IP 协议在 IP 协议里面会有源 IP 地址即浏览器所在机器的 IP 地址和目标 IP 地址也即电商网站所在服务器的 IP 地址操作系统既然知道了目标 IP 地址就开始想如何根据这个门牌号找到目标机器操作系统往往会判断这个目标 IP 地址是本地人还是外地人如果是本地人从门牌号就能看出来但是显然电商网站不在本地而在遥远的地方操作系统知道要离开本地去远方虽然不知道远方在何处但是可以这样类比一下：如果去国外要去海关去外地就要去网关而操作系统启动的时候就会被 DHCP 协议配置 IP 地址以及默认的网关的 IP 地址 地址 192.168.1.1操操作系统如何将 IP 地址发给网关呢？在本地通信基本靠吼于是操作系统大吼一声谁是 谁是 192.168.1.1啊？网网关会回答它我就是我的本地地址在村东头这个本地地址就是MAC地址而大吼的那一声是ARP协议于是操作系统将 IP 包交给了下一层也就是MAC 层网卡再将包发出去由于这个包里面是有 MAC地址的因而它能够到达网关网关收到包之后会根据自己的知识判断下一步应该怎么走网关往往是一个路由器到某个 IP 地址应该怎么走这个叫作路由表路由器有点像玄奘西行路过的一个个国家的一个个城关每个城关都连着两个国家每个国家相当于一个局域网在每个国家内部都可以使用本地的地址 MAC 进行通信一旦跨越城关就需要拿出 IP 头来里面写着贫僧来自东土大唐（就是源 IP 地址）欲往西天拜佛求经（指的是目标 IP 地址）路过宝地借宿一晚明日启行请问接下来该怎么走啊？﻿城关往往是知道这些知识的因为城关和临近的城关也会经常沟通到哪里应该怎么走这种沟通的协议称为路由协议常用的有OSPF和BGP﻿城关与城关之间是一个国家当网络包知道了下一步去哪个城关还是要使用国家内部的 MAC 地址通过下一个城关的 MAC 地址找到下一个城关然后再问下一步的路怎么走一直到走出最后一个城关最后一个城关知道这个网络包要去的地方于是对着这个国家吼一声谁是目标 IP 啊？目标服务器就会回复一个 MAC 地址网络包过关后通过这个 MAC 地址就能找到目标服务器目标服务器发现 MAC 地址对上了取下 MAC 头来发送给操作系统的网络层发现 IP 也对上了就取下 IP 头IP 头里会写上一层封装的是 TCP 协议然后将其交给传输层即TCP 层在这一层里对于收到的每个包都会有一个回复的包说明收到了这个回复的包绝非这次下单请求的结果例如购物是否成功扣了多少钱等而仅仅是 TCP 层的一个说明即收到之后的回复当然这个回复会沿着刚才来的方向走回去报个平安因为一旦出了国门西行路上千难万险如果在这个过程中网络包走丢了例如进了大沙漠或者被强盗抢劫杀害怎么办呢？因而到了要报个平安如果过一段时间还是没到发送端的 TCP 层会重新发送这个包还是上面的过程直到有一天收到平安到达的回复这个重试绝非你的浏览器重新将下单这个动作重新请求一次对于浏览器来讲就发送了一次下单请求TCP 层不断自己闷头重试除非 TCP 这一层出了问题例如连接断了才轮到浏览器的应用层重新发送下单请求当网络包平安到达 TCP 层之后TCP 头中有目标端口号通过这个端口号可以找到电商网站的进程正在监听这个端口号假设一个 Tomcat将这个包发给电商网站﻿电商网站的进程得到 HTTP 求的内容知道了要买东西买多少往往一个电商网站最初接待请求的这个 Tomcat 只是个接待员负责统筹处理这个请求而不是所有的事情都自己做例如这个接待员要告诉专门管理订单的进程登记要买某个商品买多少要告诉管理库存的进程库存要减少多少要告诉支付的进程应该付多少钱等等如何告诉相关的进程呢？往往通过 RPC 调用即远程过程调用的方式来实现远程过程调用就是当告诉管理订单进程的时候接待员不用关心中间的网络互连问题会由 RPC 框架统一处理RPC 框架有很多种有基于 HTTP 协议放在 HTTP 的报文里面的有直接封装在 TCP 报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大规模机器之间的合作我在这里列一下之后要讲的网络协议之后我会按照从底层到上层的顺序来讲述﻿上面的双十一故事只是为了给你一个大致的框架这里面有些协议我在故事里已经提到了有些还没有提到在这门课的最后一章当所有的协议都讲过之后我会再重新讲一遍这个故事到时候你就能明白更多的细节最后学完了这一节给你留一个问题吧当网络包到达一个城关的时候可以通过路由表得到下一个城关的 IP 地址直接通过 IP 地址找就可以了为什么还要通过本地的 MAC 地址呢？《圣经》中有一个通天塔的故事大致是说上帝为了阻止人类联合起来就让人类说不同的语言人类没法儿沟通达不成协议通天塔的计划就失败了但是千年以后有一种叫程序猿的物种敲着一种这个群体通用的语言连接着全世界所有的人打造这互联网世界的通天塔如今的世界正是因为互联网才连接在一起当 Hello World! 从显示器打印出来的时候还记得你激动的心情吗？如果你是程序员一定看得懂上面这一段文字这是每一个程序员向计算机世界说你好世界的方式但是你不一定知道这段文字也是一种协议是人类和计算机沟通的协议只有通过这种协议计算机才知道我们想让它做什么协议三要素当然这种协议还是更接近人类语言机器不能直接读懂需要进行翻译翻译的工作教给编译器也就是程序员常说的compile这个过程比较复杂其中的编译原理非常复杂我在这里不进行详述 但是可以看得出计算机语言作为程序员控制一台计算机工作的协议具备了协议的三要素语法就是这一段内容要符合一定的规则和格式例如括号要成对结束要使用分号等语义就是这一段内容要代表某种意义例如数字减去数字是有意义的数字减去文本一般来说就没有意义顺序就是先干啥后干啥例如可以先加上某个数值然后再减去某个数值会了计算机语言你就能够教给一台计算机完成你的工作了恭喜你入门了！但是要想打造互联网世界的通天塔只教给一台机器做什么是不够的你需要学会教给一大片机器做什么这就需要网络协议只有通过网络协议才能使一大片机器互相协作、共同完成一件事这个时候你可能会问网络协议长啥样这么神奇能干成啥事？我先拿一个简单的例子让你尝尝鲜然后再讲一个大事当你想要买一个商品常规的做法就是打开浏览器输入购物网站的地址浏览器就会给你显示一个缤纷多彩的页面那你有没有深入思考过浏览器是如何做到这件事情的？它之所以能够显示缤纷多彩的页面是因为它收到了一段来自 HTTP 协议的东西这符合协议的三要素吗？我带你来看一下首先符合语法也就是说只有按照上面那个格式来浏览器才认例如上来是状态然后是首部然后是内容第二符合语义就是要按照约定的意思来例如状态200表述的意思是网页成功返回如果不成功就是我们常见的404第三符合顺序你一点浏览器就是发送出一个 HTTP 请求然后才有上面那一串 HTTP 返回的东西浏览器显然按照协议商定好的做了最后一个五彩缤纷的页面就出现在你面前了我们常用的网络协议有哪些？接下来揭秘我要说的大事情双十一这和我们要讲的网络协议有什么关系呢？在经济学领域有个伦纳德·里德（Leonard E. Read）创作的《铅笔的故事》这个故事通过一个铅笔的诞生过程来讲述复杂的经济学理论这里我也用一个下单的过程看看互联网世界的运行过程中都使用了哪些网络协议你先在浏览器里面输入 输入 https://www.kaola.com 这是 这是一个URL浏览器只知道名字是字是www.kaola.com但是但是不知道具体的地点所以不知道应该如何访问于是它打开地址簿去查找可以使用一般的地址簿协议DNS去查找还可以使用另一种更加精准的地址簿查找协议HTTPDNS无论用哪一种方法查找最终都会得到这个地址：地址：106.114.138.24这个是这个是IP地址是互联网世界的门牌号知道了目标地址浏览器就开始打包它的请求对于普通的浏览请求往往会使用HTTP协议；但是对于购物的请求往往需要进行加密传输因而用HTTPS协议无论是什么协议里面都会写明你要买什么和买多少﻿DNS、HTTP、HTTPS 在的层我们称为应用层经过应用层封装后浏览器会将应用层的包交给下一层去完成通过 socket 编程来实现下一层是传输层传输层有两种协议一种是无连接的协议UDP一种是面向连接的协议TCP对于支付来讲往往使用 TCP 协议所谓的面向连接就是TCP 会保证这个包能够到达目的地如果不能到达就会重新发送直至到达TCP 协议里面会有两个端口一个是浏览器监听的端口一个是电商的服务器监听的端口操作系统往往通过端口来判断它得到的包应该给哪个进程传输层封装完毕后浏览器会将包交给操作系统的网络层网络层的协议是 IP 协议在 IP 协议里面会有源 IP 地址即浏览器所在机器的 IP 地址和目标 IP 地址也即电商网站所在服务器的 IP 地址操作系统既然知道了目标 IP 地址就开始想如何根据这个门牌号找到目标机器操作系统往往会判断这个目标 IP 地址是本地人还是外地人如果是本地人从门牌号就能看出来但是显然电商网站不在本地而在遥远的地方操作系统知道要离开本地去远方虽然不知道远方在何处但是可以这样类比一下：如果去国外要去海关去外地就要去网关而操作系统启动的时候就会被 DHCP 协议配置 IP 地址以及默认的网关的 IP 地址 地址 192.168.1.1操操作系统如何将 IP 地址发给网关呢？在本地通信基本靠吼于是操作系统大吼一声谁是 谁是 192.168.1.1啊？网网关会回答它我就是我的本地地址在村东头这个本地地址就是MAC地址而大吼的那一声是ARP协议于是操作系统将 IP 包交给了下一层也就是MAC 层网卡再将包发出去由于这个包里面是有 MAC地址的因而它能够到达网关网关收到包之后会根据自己的知识判断下一步应该怎么走网关往往是一个路由器到某个 IP 地址应该怎么走这个叫作路由表路由器有点像玄奘西行路过的一个个国家的一个个城关每个城关都连着两个国家每个国家相当于一个局域网在每个国家内部都可以使用本地的地址 MAC 进行通信一旦跨越城关就需要拿出 IP 头来里面写着贫僧来自东土大唐（就是源 IP 地址）欲往西天拜佛求经（指的是目标 IP 地址）路过宝地借宿一晚明日启行请问接下来该怎么走啊？﻿城关往往是知道这些知识的因为城关和临近的城关也会经常沟通到哪里应该怎么走这种沟通的协议称为路由协议常用的有OSPF和BGP﻿城关与城关之间是一个国家当网络包知道了下一步去哪个城关还是要使用国家内部的 MAC 地址通过下一个城关的 MAC 地址找到下一个城关然后再问下一步的路怎么走一直到走出最后一个城关最后一个城关知道这个网络包要去的地方于是对着这个国家吼一声谁是目标 IP 啊？目标服务器就会回复一个 MAC 地址网络包过关后通过这个 MAC 地址就能找到目标服务器目标服务器发现 MAC 地址对上了取下 MAC 头来发送给操作系统的网络层发现 IP 也对上了就取下 IP 头IP 头里会写上一层封装的是 TCP 协议然后将其交给传输层即TCP 层在这一层里对于收到的每个包都会有一个回复的包说明收到了这个回复的包绝非这次下单请求的结果例如购物是否成功扣了多少钱等而仅仅是 TCP 层的一个说明即收到之后的回复当然这个回复会沿着刚才来的方向走回去报个平安因为一旦出了国门西行路上千难万险如果在这个过程中网络包走丢了例如进了大沙漠或者被强盗抢劫杀害怎么办呢？因而到了要报个平安如果过一段时间还是没到发送端的 TCP 层会重新发送这个包还是上面的过程直到有一天收到平安到达的回复这个重试绝非你的浏览器重新将下单这个动作重新请求一次对于浏览器来讲就发送了一次下单请求TCP 层不断自己闷头重试除非 TCP 这一层出了问题例如连接断了才轮到浏览器的应用层重新发送下单请求当网络包平安到达 TCP 层之后TCP 头中有目标端口号通过这个端口号可以找到电商网站的进程正在监听这个端口号假设一个 Tomcat将这个包发给电商网站﻿电商网站的进程得到 HTTP 求的内容知道了要买东西买多少往往一个电商网站最初接待请求的这个 Tomcat 只是个接待员负责统筹处理这个请求而不是所有的事情都自己做例如这个接待员要告诉专门管理订单的进程登记要买某个商品买多少要告诉管理库存的进程库存要减少多少要告诉支付的进程应该付多少钱等等如何告诉相关的进程呢？往往通过 RPC 调用即远程过程调用的方式来实现远程过程调用就是当告诉管理订单进程的时候接待员不用关心中间的网络互连问题会由 RPC 框架统一处理RPC 框架有很多种有基于 HTTP 协议放在 HTTP 的报文里面的有直接封装在 TCP 报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大规模机器之间的合作我在这里列一下之后要讲的网络协议之后我会按照从底层到上层的顺序来讲述﻿上面的双十一故事只是为了给你一个大致的框架这里面有些协议我在故事里已经提到了有些还没有提到在这门课的最后一章当所有的协议都讲过之后我会再重新讲一遍这个故事到时候你就能明白更多的细节最后学完了这一节给你留一个问题吧当网络包到达一个城关的时候可以通过路由表得到下一个城关的 IP 地址直接通过 IP 地址找就可以了为什么还要通过本地的 MAC 地址呢？《圣经》中有一个通天塔的故事大致是说上帝为了阻止人类联合起来就让人类说不同的语言人类没法儿沟通达不成协议通天塔的计划就失败了但是千年以后有一种叫程序猿的物种敲着一种这个群体通用的语言连接着全世界所有的人打造这互联网世界的通天塔如今的世界正是因为互联网才连接在一起当 Hello World! 从显示器打印出来的时候还记得你激动的心情吗？如果你是程序员一定看得懂上面这一段文字这是每一个程序员向计算机世界说你好世界的方式但是你不一定知道这段文字也是一种协议是人类和计算机沟通的协议只有通过这种协议计算机才知道我们想让它做什么协议三要素当然这种协议还是更接近人类语言机器不能直接读懂需要进行翻译翻译的工作教给编译器也就是程序员常说的compile这个过程比较复杂其中的编译原理非常复杂我在这里不进行详述 但是可以看得出计算机语言作为程序员控制一台计算机工作的协议具备了协议的三要素语法就是这一段内容要符合一定的规则和格式例如括号要成对结束要使用分号等语义就是这一段内容要代表某种意义例如数字减去数字是有意义的数字减去文本一般来说就没有意义顺序就是先干啥后干啥例如可以先加上某个数值然后再减去某个数值会了计算机语言你就能够教给一台计算机完成你的工作了恭喜你入门了！但是要想打造互联网世界的通天塔只教给一台机器做什么是不够的你需要学会教给一大片机器做什么这就需要网络协议只有通过网络协议才能使一大片机器互相协作、共同完成一件事这个时候你可能会问网络协议长啥样这么神奇能干成啥事？我先拿一个简单的例子让你尝尝鲜然后再讲一个大事当你想要买一个商品常规的做法就是打开浏览器输入购物网站的地址浏览器就会给你显示一个缤纷多彩的页面那你有没有深入思考过浏览器是如何做到这件事情的？它之所以能够显示缤纷多彩的页面是因为它收到了一段来自 HTTP 协议的东西这符合协议的三要素吗？我带你来看一下首先符合语法也就是说只有按照上面那个格式来浏览器才认例如上来是状态然后是首部然后是内容第二符合语义就是要按照约定的意思来例如状态200表述的意思是网页成功返回如果不成功就是我们常见的404第三符合顺序你一点浏览器就是发送出一个 HTTP 请求然后才有上面那一串 HTTP 返回的东西浏览器显然按照协议商定好的做了最后一个五彩缤纷的页面就出现在你面前了我们常用的网络协议有哪些？接下来揭秘我要说的大事情双十一这和我们要讲的网络协议有什么关系呢？在经济学领域有个伦纳德·里德（Leonard E. Read）创作的《铅笔的故事》这个故事通过一个铅笔的诞生过程来讲述复杂的经济学理论这里我也用一个下单的过程看看互联网世界的运行过程中都使用了哪些网络协议你先在浏览器里面输入 输入 https://www.kaola.com 这是 这是一个URL浏览器只知道名字是字是www.kaola.com但是但是不知道具体的地点所以不知道应该如何访问于是它打开地址簿去查找可以使用一般的地址簿协议DNS去查找还可以使用另一种更加精准的地址簿查找协议HTTPDNS无论用哪一种方法查找最终都会得到这个地址：地址：106.114.138.24这个是这个是IP地址是互联网世界的门牌号知道了目标地址浏览器就开始打包它的请求对于普通的浏览请求往往会使用HTTP协议；但是对于购物的请求往往需要进行加密传输因而用HTTPS协议无论是什么协议里面都会写明你要买什么和买多少﻿DNS、HTTP、HTTPS 在的层我们称为应用层经过应用层封装后浏览器会将应用层的包交给下一层去完成通过 socket 编程来实现下一层是传输层传输层有两种协议一种是无连接的协议UDP一种是面向连接的协议TCP对于支付来讲往往使用 TCP 协议所谓的面向连接就是TCP 会保证这个包能够到达目的地如果不能到达就会重新发送直至到达TCP 协议里面会有两个端口一个是浏览器监听的端口一个是电商的服务器监听的端口操作系统往往通过端口来判断它得到的包应该给哪个进程传输层封装完毕后浏览器会将包交给操作系统的网络层网络层的协议是 IP 协议在 IP 协议里面会有源 IP 地址即浏览器所在机器的 IP 地址和目标 IP 地址也即电商网站所在服务器的 IP 地址操作系统既然知道了目标 IP 地址就开始想如何根据这个门牌号找到目标机器操作系统往往会判断这个目标 IP 地址是本地人还是外地人如果是本地人从门牌号就能看出来但是显然电商网站不在本地而在遥远的地方操作系统知道要离开本地去远方虽然不知道远方在何处但是可以这样类比一下：如果去国外要去海关去外地就要去网关而操作系统启动的时候就会被 DHCP 协议配置 IP 地址以及默认的网关的 IP 地址 地址 192.168.1.1操操作系统如何将 IP 地址发给网关呢？在本地通信基本靠吼于是操作系统大吼一声谁是 谁是 192.168.1.1啊？网网关会回答它我就是我的本地地址在村东头这个本地地址就是MAC地址而大吼的那一声是ARP协议于是操作系统将 IP 包交给了下一层也就是MAC 层网卡再将包发出去由于这个包里面是有 MAC地址的因而它能够到达网关网关收到包之后会根据自己的知识判断下一步应该怎么走网关往往是一个路由器到某个 IP 地址应该怎么走这个叫作路由表路由器有点像玄奘西行路过的一个个国家的一个个城关每个城关都连着两个国家每个国家相当于一个局域网在每个国家内部都可以使用本地的地址 MAC 进行通信一旦跨越城关就需要拿出 IP 头来里面写着贫僧来自东土大唐（就是源 IP 地址）欲往西天拜佛求经（指的是目标 IP 地址）路过宝地借宿一晚明日启行请问接下来该怎么走啊？﻿城关往往是知道这些知识的因为城关和临近的城关也会经常沟通到哪里应该怎么走这种沟通的协议称为路由协议常用的有OSPF和BGP﻿城关与城关之间是一个国家当网络包知道了下一步去哪个城关还是要使用国家内部的 MAC 地址通过下一个城关的 MAC 地址找到下一个城关然后再问下一步的路怎么走一直到走出最后一个城关最后一个城关知道这个网络包要去的地方于是对着这个国家吼一声谁是目标 IP 啊？目标服务器就会回复一个 MAC 地址网络包过关后通过这个 MAC 地址就能找到目标服务器目标服务器发现 MAC 地址对上了取下 MAC 头来发送给操作系统的网络层发现 IP 也对上了就取下 IP 头IP 头里会写上一层封装的是 TCP 协议然后将其交给传输层即TCP 层在这一层里对于收到的每个包都会有一个回复的包说明收到了这个回复的包绝非这次下单请求的结果例如购物是否成功扣了多少钱等而仅仅是 TCP 层的一个说明即收到之后的回复当然这个回复会沿着刚才来的方向走回去报个平安因为一旦出了国门西行路上千难万险如果在这个过程中网络包走丢了例如进了大沙漠或者被强盗抢劫杀害怎么办呢？因而到了要报个平安如果过一段时间还是没到发送端的 TCP 层会重新发送这个包还是上面的过程直到有一天收到平安到达的回复这个重试绝非你的浏览器重新将下单这个动作重新请求一次对于浏览器来讲就发送了一次下单请求TCP 层不断自己闷头重试除非 TCP 这一层出了问题例如连接断了才轮到浏览器的应用层重新发送下单请求当网络包平安到达 TCP 层之后TCP 头中有目标端口号通过这个端口号可以找到电商网站的进程正在监听这个端口号假设一个 Tomcat将这个包发给电商网站﻿电商网站的进程得到 HTTP 求的内容知道了要买东西买多少往往一个电商网站最初接待请求的这个 Tomcat 只是个接待员负责统筹处理这个请求而不是所有的事情都自己做例如这个接待员要告诉专门管理订单的进程登记要买某个商品买多少要告诉管理库存的进程库存要减少多少要告诉支付的进程应该付多少钱等等如何告诉相关的进程呢？往往通过 RPC 调用即远程过程调用的方式来实现远程过程调用就是当告诉管理订单进程的时候接待员不用关心中间的网络互连问题会由 RPC 框架统一处理RPC 框架有很多种有基于 HTTP 协议放在 HTTP 的报文里面的有直接封装在 TCP 报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大规模机器之间的合作我在这里列一下之后要讲的网络协议之后我会按照从底层到上层的顺序来讲述﻿上面的双十一故事只是为了给你一个大致的框架这里面有些协议我在故事里已经提到了有些还没有提到在这门课的最后一章当所有的协议都讲过之后我会再重新讲一遍这个故事到时候你就能明白更多的细节最后学完了这一节给你留一个问题吧当网络包到达一个城关的时候可以通过路由表得到下一个城关的 IP 地址直接通过 IP 地址找就可以了为什么还要通过本地的 MAC 地址呢？《圣经》中有一个通天塔的故事大致是说上帝为了阻止人类联合起来就让人类说不同的语言人类没法儿沟通达不成协议通天塔的计划就失败了但是千年以后有一种叫程序猿的物种敲着一种这个群体通用的语言连接着全世界所有的人打造这互联网世界的通天塔如今的世界正是因为互联网才连接在一起当 Hello World! 从显示器打印出来的时候还记得你激动的心情吗？如果你是程序员一定看得懂上面这一段文字这是每一个程序员向计算机世界说你好世界的方式但是你不一定知道这段文字也是一种协议是人类和计算机沟通的协议只有通过这种协议计算机才知道我们想让它做什么协议三要素当然这种协议还是更接近人类语言机器不能直接读懂需要进行翻译翻译的工作教给编译器也就是程序员常说的compile这个过程比较复杂其中的编译原理非常复杂我在这里不进行详述 但是可以看得出计算机语言作为程序员控制一台计算机工作的协议具备了协议的三要素语法就是这一段内容要符合一定的规则和格式例如括号要成对结束要使用分号等语义就是这一段内容要代表某种意义例如数字减去数字是有意义的数字减去文本一般来说就没有意义顺序就是先干啥后干啥例如可以先加上某个数值然后再减去某个数值会了计算机语言你就能够教给一台计算机完成你的工作了恭喜你入门了！但是要想打造互联网世界的通天塔只教给一台机器做什么是不够的你需要学会教给一大片机器做什么这就需要网络协议只有通过网络协议才能使一大片机器互相协作、共同完成一件事这个时候你可能会问网络协议长啥样这么神奇能干成啥事？我先拿一个简单的例子让你尝尝鲜然后再讲一个大事当你想要买一个商品常规的做法就是打开浏览器输入购物网站的地址浏览器就会给你显示一个缤纷多彩的页面那你有没有深入思考过浏览器是如何做到这件事情的？它之所以能够显示缤纷多彩的页面是因为它收到了一段来自 HTTP 协议的东西这符合协议的三要素吗？我带你来看一下首先符合语法也就是说只有按照上面那个格式来浏览器才认例如上来是状态然后是首部然后是内容第二符合语义就是要按照约定的意思来例如状态200表述的意思是网页成功返回如果不成功就是我们常见的404第三符合顺序你一点浏览器就是发送出一个 HTTP 请求然后才有上面那一串 HTTP 返回的东西浏览器显然按照协议商定好的做了最后一个五彩缤纷的页面就出现在你面前了我们常用的网络协议有哪些？接下来揭秘我要说的大事情双十一这和我们要讲的网络协议有什么关系呢？在经济学领域有个伦纳德·里德（Leonard E. Read）创作的《铅笔的故事》这个故事通过一个铅笔的诞生过程来讲述复杂的经济学理论这里我也用一个下单的过程看看互联网世界的运行过程中都使用了哪些网络协议你先在浏览器里面输入 输入 https://www.kaola.com 这是 这是一个URL浏览器只知道名字是字是www.kaola.com但是但是不知道具体的地点所以不知道应该如何访问于是它打开地址簿去查找可以使用一般的地址簿协议DNS去查找还可以使用另一种更加精准的地址簿查找协议HTTPDNS无论用哪一种方法查找最终都会得到这个地址：地址：106.114.138.24这个是这个是IP地址是互联网世界的门牌号知道了目标地址浏览器就开始打包它的请求对于普通的浏览请求往往会使用HTTP协议；但是对于购物的请求往往需要进行加密传输因而用HTTPS协议无论是什么协议里面都会写明你要买什么和买多少﻿DNS、HTTP、HTTPS 在的层我们称为应用层经过应用层封装后浏览器会将应用层的包交给下一层去完成通过 socket 编程来实现下一层是传输层传输层有两种协议一种是无连接的协议UDP一种是面向连接的协议TCP对于支付来讲往往使用 TCP 协议所谓的面向连接就是TCP 会保证这个包能够到达目的地如果不能到达就会重新发送直至到达TCP 协议里面会有两个端口一个是浏览器监听的端口一个是电商的服务器监听的端口操作系统往往通过端口来判断它得到的包应该给哪个进程传输层封装完毕后浏览器会将包交给操作系统的网络层网络层的协议是 IP 协议在 IP 协议里面会有源 IP 地址即浏览器所在机器的 IP 地址和目标 IP 地址也即电商网站所在服务器的 IP 地址操作系统既然知道了目标 IP 地址就开始想如何根据这个门牌号找到目标机器操作系统往往会判断这个目标 IP 地址是本地人还是外地人如果是本地人从门牌号就能看出来但是显然电商网站不在本地而在遥远的地方操作系统知道要离开本地去远方虽然不知道远方在何处但是可以这样类比一下：如果去国外要去海关去外地就要去网关而操作系统启动的时候就会被 DHCP 协议配置 IP 地址以及默认的网关的 IP 地址 地址 192.168.1.1操操作系统如何将 IP 地址发给网关呢？在本地通信基本靠吼于是操作系统大吼一声谁是 谁是 192.168.1.1啊？网网关会回答它我就是我的本地地址在村东头这个本地地址就是MAC地址而大吼的那一声是ARP协议于是操作系统将 IP 包交给了下一层也就是MAC 层网卡再将包发出去由于这个包里面是有 MAC地址的因而它能够到达网关网关收到包之后会根据自己的知识判断下一步应该怎么走网关往往是一个路由器到某个 IP 地址应该怎么走这个叫作路由表路由器有点像玄奘西行路过的一个个国家的一个个城关每个城关都连着两个国家每个国家相当于一个局域网在每个国家内部都可以使用本地的地址 MAC 进行通信一旦跨越城关就需要拿出 IP 头来里面写着贫僧来自东土大唐（就是源 IP 地址）欲往西天拜佛求经（指的是目标 IP 地址）路过宝地借宿一晚明日启行请问接下来该怎么走啊？﻿城关往往是知道这些知识的因为城关和临近的城关也会经常沟通到哪里应该怎么走这种沟通的协议称为路由协议常用的有OSPF和BGP﻿城关与城关之间是一个国家当网络包知道了下一步去哪个城关还是要使用国家内部的 MAC 地址通过下一个城关的 MAC 地址找到下一个城关然后再问下一步的路怎么走一直到走出最后一个城关最后一个城关知道这个网络包要去的地方于是对着这个国家吼一声谁是目标 IP 啊？目标服务器就会回复一个 MAC 地址网络包过关后通过这个 MAC 地址就能找到目标服务器目标服务器发现 MAC 地址对上了取下 MAC 头来发送给操作系统的网络层发现 IP 也对上了就取下 IP 头IP 头里会写上一层封装的是 TCP 协议然后将其交给传输层即TCP 层在这一层里对于收到的每个包都会有一个回复的包说明收到了这个回复的包绝非这次下单请求的结果例如购物是否成功扣了多少钱等而仅仅是 TCP 层的一个说明即收到之后的回复当然这个回复会沿着刚才来的方向走回去报个平安因为一旦出了国门西行路上千难万险如果在这个过程中网络包走丢了例如进了大沙漠或者被强盗抢劫杀害怎么办呢？因而到了要报个平安如果过一段时间还是没到发送端的 TCP 层会重新发送这个包还是上面的过程直到有一天收到平安到达的回复这个重试绝非你的浏览器重新将下单这个动作重新请求一次对于浏览器来讲就发送了一次下单请求TCP 层不断自己闷头重试除非 TCP 这一层出了问题例如连接断了才轮到浏览器的应用层重新发送下单请求当网络包平安到达 TCP 层之后TCP 头中有目标端口号通过这个端口号可以找到电商网站的进程正在监听这个端口号假设一个 Tomcat将这个包发给电商网站﻿电商网站的进程得到 HTTP 求的内容知道了要买东西买多少往往一个电商网站最初接待请求的这个 Tomcat 只是个接待员负责统筹处理这个请求而不是所有的事情都自己做例如这个接待员要告诉专门管理订单的进程登记要买某个商品买多少要告诉管理库存的进程库存要减少多少要告诉支付的进程应该付多少钱等等如何告诉相关的进程呢？往往通过 RPC 调用即远程过程调用的方式来实现远程过程调用就是当告诉管理订单进程的时候接待员不用关心中间的网络互连问题会由 RPC 框架统一处理RPC 框架有很多种有基于 HTTP 协议放在 HTTP 的报文里面的有直接封装在 TCP 报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大规模机器之间的合作我在这里列一下之后要讲的网络协议之后我会按照从底层到上层的顺序来讲述﻿上面的双十一故事只是为了给你一个大致的框架这里面有些协议我在故事里已经提到了有些还没有提到在这门课的最后一章当所有的协议都讲过之后我会再重新讲一遍这个故事到时候你就能明白更多的细节最后学完了这一节给你留一个问题吧当网络包到达一个城关的时候可以通过路由表得到下一个城关的 IP 地址直接通过 IP 地址找就可以了为什么还要通过本地的 MAC 地址呢？《圣经》中有一个通天塔的故事大致是说上帝为了阻止人类联合起来就让人类说不同的语言人类没法儿沟通达不成协议通天塔的计划就失败了但是千年以后有一种叫程序猿的物种敲着一种这个群体通用的语言连接着全世界所有的人打造这互联网世界的通天塔如今的世界正是因为互联网才连接在一起当 Hello World! 从显示器打印出来的时候还记得你激动的心情吗？如果你是程序员一定看得懂上面这一段文字这是每一个程序员向计算机世界说你好世界的方式但是你不一定知道这段文字也是一种协议是人类和计算机沟通的协议只有通过这种协议计算机才知道我们想让它做什么协议三要素当然这种协议还是更接近人类语言机器不能直接读懂需要进行翻译翻译的工作教给编译器也就是程序员常说的compile这个过程比较复杂其中的编译原理非常复杂我在这里不进行详述 但是可以看得出计算机语言作为程序员控制一台计算机工作的协议具备了协议的三要素语法就是这一段内容要符合一定的规则和格式例如括号要成对结束要使用分号等语义就是这一段内容要代表某种意义例如数字减去数字是有意义的数字减去文本一般来说就没有意义顺序就是先干啥后干啥例如可以先加上某个数值然后再减去某个数值会了计算机语言你就能够教给一台计算机完成你的工作了恭喜你入门了！但是要想打造互联网世界的通天塔只教给一台机器做什么是不够的你需要学会教给一大片机器做什么这就需要网络协议只有通过网络协议才能使一大片机器互相协作、共同完成一件事这个时候你可能会问网络协议长啥样这么神奇能干成啥事？我先拿一个简单的例子让你尝尝鲜然后再讲一个大事当你想要买一个商品常规的做法就是打开浏览器输入购物网站的地址浏览器就会给你显示一个缤纷多彩的页面那你有没有深入思考过浏览器是如何做到这件事情的？它之所以能够显示缤纷多彩的页面是因为它收到了一段来自 HTTP 协议的东西这符合协议的三要素吗？我带你来看一下首先符合语法也就是说只有按照上面那个格式来浏览器才认例如上来是状态然后是首部然后是内容第二符合语义就是要按照约定的意思来例如状态200表述的意思是网页成功返回如果不成功就是我们常见的404第三符合顺序你一点浏览器就是发送出一个 HTTP 请求然后才有上面那一串 HTTP 返回的东西浏览器显然按照协议商定好的做了最后一个五彩缤纷的页面就出现在你面前了我们常用的网络协议有哪些？接下来揭秘我要说的大事情双十一这和我们要讲的网络协议有什么关系呢？在经济学领域有个伦纳德·里德（Leonard E. Read）创作的《铅笔的故事》这个故事通过一个铅笔的诞生过程来讲述复杂的经济学理论这里我也用一个下单的过程看看互联网世界的运行过程中都使用了哪些网络协议你先在浏览器里面输入 输入 https://www.kaola.com 这是 这是一个URL浏览器只知道名字是字是www.kaola.com但是但是不知道具体的地点所以不知道应该如何访问于是它打开地址簿去查找可以使用一般的地址簿协议DNS去查找还可以使用另一种更加精准的地址簿查找协议HTTPDNS无论用哪一种方法查找最终都会得到这个地址：地址：106.114.138.24这个是这个是IP地址是互联网世界的门牌号知道了目标地址浏览器就开始打包它的请求对于普通的浏览请求往往会使用HTTP协议；但是对于购物的请求往往需要进行加密传输因而用HTTPS协议无论是什么协议里面都会写明你要买什么和买多少﻿DNS、HTTP、HTTPS 在的层我们称为应用层经过应用层封装后浏览器会将应用层的包交给下一层去完成通过 socket 编程来实现下一层是传输层传输层有两种协议一种是无连接的协议UDP一种是面向连接的协议TCP对于支付来讲往往使用 TCP 协议所谓的面向连接就是TCP 会保证这个包能够到达目的地如果不能到达就会重新发送直至到达TCP 协议里面会有两个端口一个是浏览器监听的端口一个是电商的服务器监听的端口操作系统往往通过端口来判断它得到的包应该给哪个进程传输层封装完毕后浏览器会将包交给操作系统的网络层网络层的协议是 IP 协议在 IP 协议里面会有源 IP 地址即浏览器所在机器的 IP 地址和目标 IP 地址也即电商网站所在服务器的 IP 地址操作系统既然知道了目标 IP 地址就开始想如何根据这个门牌号找到目标机器操作系统往往会判断这个目标 IP 地址是本地人还是外地人如果是本地人从门牌号就能看出来但是显然电商网站不在本地而在遥远的地方操作系统知道要离开本地去远方虽然不知道远方在何处但是可以这样类比一下：如果去国外要去海关去外地就要去网关而操作系统启动的时候就会被 DHCP 协议配置 IP 地址以及默认的网关的 IP 地址 地址 192.168.1.1操操作系统如何将 IP 地址发给网关呢？在本地通信基本靠吼于是操作系统大吼一声谁是 谁是 192.168.1.1啊？网网关会回答它我就是我的本地地址在村东头这个本地地址就是MAC地址而大吼的那一声是ARP协议于是操作系统将 IP 包交给了下一层也就是MAC 层网卡再将包发出去由于这个包里面是有 MAC地址的因而它能够到达网关网关收到包之后会根据自己的知识判断下一步应该怎么走网关往往是一个路由器到某个 IP 地址应该怎么走这个叫作路由表路由器有点像玄奘西行路过的一个个国家的一个个城关每个城关都连着两个国家每个国家相当于一个局域网在每个国家内部都可以使用本地的地址 MAC 进行通信一旦跨越城关就需要拿出 IP 头来里面写着贫僧来自东土大唐（就是源 IP 地址）欲往西天拜佛求经（指的是目标 IP 地址）路过宝地借宿一晚明日启行请问接下来该怎么走啊？﻿城关往往是知道这些知识的因为城关和临近的城关也会经常沟通到哪里应该怎么走这种沟通的协议称为路由协议常用的有OSPF和BGP﻿城关与城关之间是一个国家当网络包知道了下一步去哪个城关还是要使用国家内部的 MAC 地址通过下一个城关的 MAC 地址找到下一个城关然后再问下一步的路怎么走一直到走出最后一个城关最后一个城关知道这个网络包要去的地方于是对着这个国家吼一声谁是目标 IP 啊？目标服务器就会回复一个 MAC 地址网络包过关后通过这个 MAC 地址就能找到目标服务器目标服务器发现 MAC 地址对上了取下 MAC 头来发送给操作系统的网络层发现 IP 也对上了就取下 IP 头IP 头里会写上一层封装的是 TCP 协议然后将其交给传输层即TCP 层在这一层里对于收到的每个包都会有一个回复的包说明收到了这个回复的包绝非这次下单请求的结果例如购物是否成功扣了多少钱等而仅仅是 TCP 层的一个说明即收到之后的回复当然这个回复会沿着刚才来的方向走回去报个平安因为一旦出了国门西行路上千难万险如果在这个过程中网络包走丢了例如进了大沙漠或者被强盗抢劫杀害怎么办呢？因而到了要报个平安如果过一段时间还是没到发送端的 TCP 层会重新发送这个包还是上面的过程直到有一天收到平安到达的回复这个重试绝非你的浏览器重新将下单这个动作重新请求一次对于浏览器来讲就发送了一次下单请求TCP 层不断自己闷头重试除非 TCP 这一层出了问题例如连接断了才轮到浏览器的应用层重新发送下单请求当网络包平安到达 TCP 层之后TCP 头中有目标端口号通过这个端口号可以找到电商网站的进程正在监听这个端口号假设一个 Tomcat将这个包发给电商网站﻿电商网站的进程得到 HTTP 求的内容知道了要买东西买多少往往一个电商网站最初接待请求的这个 Tomcat 只是个接待员负责统筹处理这个请求而不是所有的事情都自己做例如这个接待员要告诉专门管理订单的进程登记要买某个商品买多少要告诉管理库存的进程库存要减少多少要告诉支付的进程应该付多少钱等等如何告诉相关的进程呢？往往通过 RPC 调用即远程过程调用的方式来实现远程过程调用就是当告诉管理订单进程的时候接待员不用关心中间的网络互连问题会由 RPC 框架统一处理RPC 框架有很多种有基于 HTTP 协议放在 HTTP 的报文里面的有直接封装在 TCP 报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单单的下单过程中间牵扯到这么多的协议而管理一大片机器更是一件特别有技术含量的事情除此之外像最近比较火的云计算、容器、微服务等技术也都需要借助各种协议来达成大也都需要借助各报文里面的当接待员发现相应的部门都处理完毕就回复一个 HTTPS 的包告知下单成功这个 HTTPS 的包会像来的时候一样经过千难万险到达你的个人电脑最终进入浏览器显示支付成功小结看到了吧一个简简单";
		insertTestService.insertData(dataStr, timeStamp);
	}
}
